<Project>

  <PropertyGroup>
    <GitBranch Condition="'$(SYSTEM_PULLREQUEST_SOURCEBRANCH)' != ''">$(SYSTEM_PULLREQUEST_SOURCEBRANCH.Replace('refs/heads/', ''))</GitBranch>
    <GitBranch Condition="'$(SYSTEM_PULLREQUEST_SOURCEBRANCH)' == '' and '$(BUILD_SOURCEBRANCH)' != ''">$(BUILD_SOURCEBRANCH.Replace('refs/heads/', ''))</GitBranch>
  </PropertyGroup>

  <Target Name="Version" DependsOnTargets="SetVersions">
    <Message Importance="high" Text="PackageVersion=$(PackageVersion)
AssemblyVersion=$(AssemblyVersion)" />
    <Message Condition="$(CI)" Importance="high" Text="##vso[build.updatebuildnumber]$(BuildVersion)"/>
  </Target>

  <Target Name="SetVersions"
          BeforeTargets="PrepareForBuild;GetAssemblyVersion;GenerateNuspec;Pack"
          DependsOnTargets="GitVersion"
          Returns="$(Version)"
          Condition="'$(GitInfoImported)' == 'true' And '$(ExcludeRestorePackageImports)' != 'true'">

    <PropertyGroup>
      <GitBranch>$(GitBranch.Replace('/', '-'))</GitBranch>
      <!-- We don't build stable versions from non-master branches. But when the version came from the branch, we leave it as-is. -->
      <GitSemVerDashLabel Condition="'$(GitBranch)' != 'master' and '$(GitSemVerDashLabel)' == '' and '$(GitSemVerSource)' != 'Branch'">-$(GitBranch)</GitSemVerDashLabel>
    </PropertyGroup>

    <ItemGroup>
      <!-- Branch metadata always present for non-master branches, unless the existing label matches the branch.
           For a versioned branch, it doesn't make sense either. -->
      <VersionMetadata Include="$(GitBranch)" Condition="'$(GitBranch)' != 'master' and '$(GitSemVerSource)' != 'Branch' and '$(GitSemVerDashLabel)' != '-$(GitBranch)'" />

      <VersionMetadata Condition="$(CI) and '$(BUILD_REASON)' == 'PullRequest'"
                       Include="pr.$(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER)"/>
      <VersionMetadata Include="sha.$(GitCommit)" Condition="'$(GitCommit)' != ''"/>
      <VersionMetadata Condition="$(CI)"
                       Include="build.$(BUILD_BUILDID)"/>
    </ItemGroup>

    <PropertyGroup>
      <VersionMetadataLabel>@(VersionMetadata -> '%(Identity)', '-')</VersionMetadataLabel>
      <VersionMetadataPlusLabel Condition="'$(VersionMetadataLabel)' != ''">+$(VersionMetadataLabel)</VersionMetadataPlusLabel>

      <BuildVersion>$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)$(GitSemVerDashLabel)$(VersionMetadataPlusLabel)</BuildVersion>
      <PackageVersion>$(BuildVersion)</PackageVersion>
      <Version>$(BuildVersion)</Version>
    </PropertyGroup>

    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>Version</_Parameter1>
        <_Parameter2>$(Version)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>PackageVersion</_Parameter1>
        <_Parameter2>$(PackageVersion)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>

  </Target>

  <Target Name="AddVersionMetadata" DependsOnTargets="GetAssemblyVersion" BeforeTargets="GenerateThisAssemblyMetadata">
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>AssemblyVersion</_Parameter1>
        <_Parameter2>$(AssemblyVersion)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>FileVersion</_Parameter1>
        <_Parameter2>$(FileVersion)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>InformationalVersion</_Parameter1>
        <_Parameter2>$(InformationalVersion)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>

</Project>